#!/bin/bash

# Serve hugo site in a Docker container
#
# See usage function below
main() {

  local image="${SWG_IMAGE:-ghcr.io/scilifelabdatacentre/swg-hugo-site}" \
        tag="${SWG_TAG:-local}" \
        port="${SWG_PORT:-8080}" \
        datadir="${SWG_DATA_DIR:-data}" \
        hugo_image="${SWG_HUGO_IMAGE:=hugomods/hugo}" \
        hugo_tag="${SWG_HUGO_TAG:=std-base-0.138.0}" \
        dev=false \
        container_name=genome-portal

  while getopts i:t:p:dh opt; do
    case "${opt}" in
      i)
        image="${OPTARG}";;
      t)
        tag="${OPTARG}";;
      p)
        port="${OPTARG}";;
      d)
        dev=true;;
      h)
        usage
        exit 0
        ;;
      \?)
        usage
        exit 1
        ;;
    esac
  done

  if [[ -n "${cid:=$(docker ps -qaf name=${container_name})}" ]]; then
    cat <<-EOF
Name '${container_name}' already taken by container ${cid}.
To stop and remove:
    docker rm -f ${cid}
EOF
    return 1
  fi

  if run >/dev/null 2>/tmp/dockerserve.log; then
    cat <<-EOF
    - Web server is running in container "${container_name}".
    - Site can be visited at http://localhost:${port}

    To shut down:
        docker rm -f "${container_name}"
EOF
  else
    cat /tmp/dockerserve.log
  fi
}

run() {
  if [[ "${dev}" = true ]]; then
    docker run --rm -d  \
           -p "${port}":1313 \
           -p 1313:1313 \
           -v "$(pwd)/hugo":"/src" \
           --name "${container_name}" \
           "${hugo_image}:${hugo_tag}" hugo server --bind 0.0.0.0
  else
    docker run -d  \
           -p "${port}":8080 \
           -v "$(pwd)/${datadir}":"/usr/share/nginx/html/data" \
           --name "${container_name}" \
           "${image}:${tag}"
  fi
}

usage() {
  cat <<EOF
dockerserve [-t TAG] [-i IMAGE] [-p PORT] [-d]

Serve Genome Portal in a Docker container

Customize the run using the options below, or the corresponding
SWG-prefixed environment variables. For example, to serve on host port
8000 with the image tagged 'latest', the following are equivalent:

  SWG_PORT=8000 SWG_TAG=latest ./scripts/dockerserve

  ./scripts/dockerserve -t latest -p 8000

Options:
  -d            Use Hugo development server
  -i IMAGE      Docker image to use.
                Default: ghcr.io/scilifelabdatacentre/swg-hugo-site
  -p PORT       Host port. Default: 8080
  -t TAG        Docker image tag. Default: local
EOF
}

main "$@"
