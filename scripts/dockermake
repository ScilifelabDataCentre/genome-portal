#!/bin/bash

help() {
  echo "\
Run 'make' in a Docker container

Usage: dockermake [options] [arg...]

Non-option command line arguments are passed to 'make'.

The environment variables SWG_UID and SWG_GID can be used to run the
container as a specific user and group. By default, the effective user
and group id of the host are used.

The environment variables SWG_IMAGE and SWG_TAG can be used to
override the Docker image to use. For example:

export SWG_IMAGE=industrious-squirrel SWG_TAG=slim-buster
scripts/dockerbuild.sh build
"

}

main() {
  CWD="$(git rev-parse --show-toplevel)"
  readonly CWD

  declare tag image
  tag="${SWG_TAG:-local}"
  image="${SWG_IMAGE:-ghcr.io/scilifelabdatacentre/swg-data-builder}"

  # Directories on the host that are mounted in the container, and used
  # by `make`. Paths must be *relative* to the repository root.
  declare data_dir install_dir config_dir
  data_dir="${SWG_DATA_DIR:=data}"
  install_dir="${SWG_INSTALL_DIR:=hugo/static/data}"
  config_dir="${SWG_CONFIG_DIR:=config}"

  declare test no_teardown
  while getopts hTkt: opt; do
    case "${opt}" in
      T) test=1 ;;
      k) no_teardown=1 ;;
      t) tag="${OPTARG}" ;;
      h) help && exit 0 ;;
      \?) >&2 help && exit 1 ;;
    esac
  done
  shift $((OPTIND - 1))

  declare -a docker_flags
  if [[ -n ${SWG_UID} || -n ${SWG_GID} ]];
  then
    docker_flags+=("-u" "${SWG_UID:-$(id -u)}:${SWG_GID:-$(id -g)}")
  fi

  if ((test)); then

    TEST_DIR="${SWG_TEST_DIR:-tests}"
    FIXTURES_DIR="${TEST_DIR}/fixtures"
    TEST_NET=swg-test-net
    TEST_SERVER_NAME=fixtures
    readonly TEST_DIR FIXTURES_DIR TEST_NET TEST_SERVER_NAME

    data_dir="${TEST_DIR}/data"
    install_dir="${TEST_DIR}/public"
    config_dir="${TEST_DIR}/config"


    if [[ "$(docker network ls -q -f name=${TEST_NET})" ]]; then
      echo "Using existing network: ${TEST_NET}"
    else
      echo "Creating test network ${TEST_NET}"
      docker network create "${TEST_NET}"
    fi

    if [[ "$(docker ps -a -q -f name=${TEST_SERVER_NAME})" ]]; then
      echo "Using existing test server container: ${TEST_SERVER_NAME}"
    else
      echo "Starting test server..."
      docker run -d -q --name="${TEST_SERVER_NAME}" \
             --network="${TEST_NET}" \
             -v "${CWD}/${FIXTURES_DIR}":/usr/share/nginx/html \
             nginx:alpine
    fi

    # Run the test build
    docker_flags+=(--network="${TEST_NET}")
    docker_make "$@"

    if ((no_teardown)); then
      echo "Keeping test resources running"
      echo "To clean up manually:"
      echo "    docker container rm -f ${TEST_SERVER_NAME}"
      echo "    docker network rm ${TEST_NET}"
      exit
    fi
    echo "Cleaning up..."
    {
      docker container rm -f "${TEST_SERVER_NAME}"
      docker network rm -f "${TEST_NET}"
    } > /dev/null

  else
    docker_make "$@"
  fi
}

# Run make in Docker container
#
# Mount Makefile and directories to use for data, configuration and
# installation
#
# Non-locals:
#   data_dir
#   install_dir
#   config_dir
#   image
#   tag
#   cwd
#   docker_flags
# Arguments:
#   All arguments are passed to 'make'
docker_make() {
  local -r docker_workdir='/swedgene'
  # Make sure writable directories exist on the host
  mkdir -p "${data_dir}" "${install_dir}"

  # Specify Docker mount points and environment variables used by make
  docker_flags+=(
    # Data directory
    -v "${CWD}/${data_dir}:${docker_workdir}/${data_dir}"
    -e "SWG_DATA_DIR=${data_dir}"

    # Installation directory
    -v "${CWD}/${install_dir}:${docker_workdir}/${install_dir}"
    -e "SWG_INSTALL_DIR=${install_dir}"

    # Configuration directory
    -v "${CWD}/${config_dir}:${docker_workdir}/${config_dir}"
    -e "SWG_CONFIG_DIR=${config_dir}"
  )

  # Mount Makefile and script directory as well
  docker_flags+=(
    -v "${CWD}/Makefile:${docker_workdir}/Makefile"
    -v "${CWD}/scripts:${docker_workdir}/scripts"
  )
  docker run --rm "${docker_flags[@]}" "${image}:${tag}" make "$@"
}

main "$@"
